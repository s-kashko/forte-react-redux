{"version":3,"sources":["services/peopleService.js","store/actions/loading.js","store/actions/errors.js","store/actions/people.js","services/planetsService.js","store/actions/planets.js","services/starshipsService.js","store/actions/starships.js","store/selectors/people.js","store/selectors/planets.js","store/selectors/starships.js","components/common/Button.jsx","components/common/Table.jsx","components/common/Preloader/Preloader.jsx","components/pages/PeoplePage.jsx","components/pages/PlanetsPage.jsx","components/pages/StarshipsPage.jsx","utils/validation/peopleForm.js","components/common/Input.jsx","components/forms/PeopleForm.jsx","components/Navbar.jsx","components/common/Error404/Error404.js","components/common/CommonError/CommonError.js","utils/validation/planetsForm.js","components/forms/PlanetsForm.jsx","utils/validation/starshipsForm.js","components/forms/StarshipsForm.jsx","App.js","store/reducers/people.js","store/reducers/planets.js","store/reducers/starships.js","store/reducers/loading.js","store/reducers/errors.js","store/reducers/index.js","index.js","components/common/Preloader/Preloader.svg","components/common/Error404/Error404.module.css","components/common/CommonError/CommonError.module.css"],"names":["peopleColumns","peopleAPI","axios","response","data","results","map","name","height","mass","gender","birth_year","beloved","id","nanoid","setPeopleLoading","value","type","setPlanetsLoading","setStarshipsLoading","set404error","path","setError","message","error","setPeopleAC","people","planetsColumns","planetsAPI","diameter","rotation_period","population","climate","setPlanetsAC","planets","starshipsColumns","starshipsAPI","model","starship_class","manufacturer","passengers","setStarshipsAC","starships","getAllPeople","state","getAllPlanets","getAllStarships","Button","onClick","label","classes","disabled","className","Table","columns","onDelete","tableDescriptor","isLoading","isInitializing","createKey","length","scope","column","key","colName","item","index","content","renderCell","Preloader","width","styleArg","style","src","preloader","alt","PeoplePage","dispatch","useDispatch","useSelector","peopleLoading","loading","peopleInitializing","handlePersonStatus","getState","changePersonStatusAC","localStorage","setItem","JSON","stringify","changePersonStatus","to","marginBottom","Object","keys","checked","onChange","color","values","deletePersonAC","deletePerson","marginTop","PlanetsPage","planetsLoading","planetsInitializing","handlePlanetStatus","changePlanetStatusAC","changePlanetStatus","deletePlanetAC","deletePlanet","StarshipsPage","starshipsLoading","starshipsInitializing","handleBelovedStatus","changeStarshipStatusAC","changeStarshipStatus","deleteStarshipAC","deleteStarship","default","Joi","string","required","validate","min","max","number","integer","positive","less","valid","Input","rest","htmlFor","PeopleForm","pathname","useLocation","history","useHistory","match","useRouteMatch","useState","formErrors","setFormErrors","personData","setPersonData","editMode","setEditMode","personIdError","setPersonIdError","useEffect","pathId","params","initialPersonData","reduce","columnName","person","find","renderPerson","replace","forRender","getValidateFunc","validateArr","forStore","newItem","storePerson","toUpperCase","slice","event","currentTarget","currentError","validateFunc","errors","handleChange","preventDefault","updatePersonAC","push","addNewPersonAC","addNewPerson","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","withRouter","location","invalidPath","error404","styles","Error404","CommonError","resetError","timerId","setTimeout","clearTimeout","PlanetsForm","planetData","setPlanetData","planetIdError","setPlanetIdError","initialPlanetData","planet","renderPlanet","storePlanet","updatePlanetAC","addNewPlanetAC","addNewPlanet","StarshipsForm","starshipData","setStarshipData","starshipIdError","setStarshipIdError","initialStarshipData","starship","renderStarship","includes","updateStarshipAC","addNewStarshipAC","addNewStarship","App","peopleLS","getItem","setPeople","parse","a","planetsLS","setPlanets","starshipsLS","setStarships","dispatchResetError","errorsArr","err","exact","from","render","props","component","initialState","peopleReducer","action","filter","planetReducer","starshipsReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2c589299.chunk.js","sourcesContent":["import { nanoid } from \"nanoid\";\nimport * as axios from 'axios';\n\nexport const peopleColumns = [\n    'name',\n    'height',\n    'mass',\n    'gender',\n    'birth_year',\n]\n\nexport const peopleAPI = {\n\n    async getPeople() {\n        const response = await axios.get('https://swapi.dev/api/people');\n        return response.data.results.map(({ name, height, mass, gender, birth_year }) => ({\n            name,\n            height,\n            mass,\n            gender,\n            birth_year,\n            beloved: false,\n            id: nanoid()\n        }))\n    },\n}","export const SET_PEOPLE_LOADING = 'SET_PEOPLE_LOADING';\r\nexport const SET_PLANETS_LOADING = 'SET_PLANETS_LOADING';\r\nexport const SET_STARSHIPS_LOADING = 'SET_STARSHIPS_LOADING';\r\nexport const PEOPLE_INITIALIZING_DONE = 'PEOPLE_INITIALIZING_DONE';\r\nexport const PLANETS_INITIALIZING_DONE = 'PLANETS_INITIALIZING_DONE';\r\nexport const STARSHIPS_INITIALIZING_DONE = 'STARSHIPS_INITIALIZING_DONE';\r\n\r\n\r\nexport function setPeopleLoading(value) {\r\n    return { type: SET_PEOPLE_LOADING, value }\r\n}\r\n\r\nexport function setPlanetsLoading(value) {\r\n    return { type: SET_PLANETS_LOADING, value }\r\n}\r\n\r\nexport function setStarshipsLoading(value) {\r\n    return { type: SET_STARSHIPS_LOADING, value }\r\n}\r\n\r\nexport function peopleInzDone() {\r\n    return { type: PEOPLE_INITIALIZING_DONE }\r\n}\r\n\r\nexport function planetsInzDone() {\r\n    return { type: PLANETS_INITIALIZING_DONE }\r\n}\r\n\r\nexport function starshipsInzDone() {\r\n    return { type: STARSHIPS_INITIALIZING_DONE }\r\n}","import { nanoid } from 'nanoid';\r\n\r\nexport const SET_404_ERROR = 'SET_404_ERROR';\r\nexport const RESET_404_ERROR = 'RESET_404_ERROR';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const RESET_ERROR = 'RESET_ERROR';\r\n\r\nexport function set404error(path) {\r\n    return { type: SET_404_ERROR, path }\r\n}\r\n\r\nexport function reset404error() {\r\n    return { type: RESET_404_ERROR }\r\n}\r\n\r\nexport function setError(message) {\r\n    return { type: SET_ERROR, error: { message, id: nanoid() } }\r\n}\r\n\r\nexport function resetError(id) {\r\n    return { type: RESET_ERROR, id }\r\n}","import { peopleAPI } from '../../services/peopleService';\nimport { setPeopleLoading, peopleInzDone } from './loading';\nimport { setError } from './errors';\n\nexport const SET_PEOPLE = 'SET_PEOPLE';\nexport const UPDATE_PERSON = 'UPDATE_PERSON';\nexport const ADD_NEW_PERSON = 'ADD_NEW_PERSON';\nexport const DELETE_PERSON = 'DELETE_PERSON';\nexport const CHANGE_PERSON_STATUS = 'CHANGE_PERSON_STATUS';\n\nfunction setPeopleAC(people) {\n  return { type: SET_PEOPLE, people };\n}\n\nexport const setPeople = (people) => (dispatch) => {\n  dispatch(setPeopleAC(people));\n  dispatch(peopleInzDone());\n}\n\nexport const getPeopleData = () => async (dispatch) => {\n  try {\n    dispatch(setPeopleLoading(true));\n    const people = await peopleAPI.getPeople();\n    dispatch(setPeopleAC(people));\n    localStorage.setItem('swapi-people', JSON.stringify(people));\n    dispatch(peopleInzDone());\n  } catch (err) {\n    dispatch(setError(err.message))\n  } finally {\n    dispatch(setPeopleLoading(false));\n  }\n}\n\nfunction addNewPersonAC(person) {\n  return { type: ADD_NEW_PERSON, person }\n}\n\nexport const addNewPerson = (person) => (dispatch, getState) => {\n  dispatch(addNewPersonAC(person));\n  localStorage.setItem('swapi-people', JSON.stringify(getState().people))\n}\n\nfunction updatePersonAC(person) {\n  return { type: UPDATE_PERSON, person }\n}\n\nexport const updatePerson = (person) => (dispatch, getState) => {\n  dispatch(updatePersonAC(person));\n  localStorage.setItem('swapi-people', JSON.stringify(getState().people))\n}\n\n\nfunction deletePersonAC(id) {\n  return { type: DELETE_PERSON, id };\n}\n\nexport const deletePerson = (id) => (dispatch, getState) => {\n  dispatch(deletePersonAC(id));\n  localStorage.setItem('swapi-people', JSON.stringify(getState().people));\n}\n\nfunction changePersonStatusAC(id) {\n  return { type: CHANGE_PERSON_STATUS, id };\n}\n\nexport const changePersonStatus = (id) => (dispatch, getState) => {\n  dispatch(changePersonStatusAC(id));\n  localStorage.setItem('swapi-people', JSON.stringify(getState().people))\n}\n\n","import { nanoid } from \"nanoid\";\r\nimport * as axios from 'axios';\r\n\r\nexport const planetsColumns = [\r\n    'name',\r\n    'diameter',\r\n    'rotation_period',\r\n    'population',\r\n    'climate',\r\n]\r\n\r\n\r\nexport const planetsAPI = {\r\n\r\n    async getPlanets() {\r\n        const response = await axios.get('https://swapi.dev/api/planets');\r\n        return response.data.results.map(({ name, diameter, rotation_period, population, climate }) => ({\r\n            name,\r\n            diameter,\r\n            rotation_period,\r\n            population,\r\n            climate,\r\n            beloved: false,\r\n            id: nanoid()\r\n        }))\r\n    },\r\n}","import { planetsAPI } from '../../services/planetsService';\nimport { setPlanetsLoading, planetsInzDone, peopleInzDone } from './loading';\nimport { setError } from './errors';\n\nexport const SET_PLANETS = 'SET_PLANETS';\nexport const UPDATE_PLANET = 'UPDATE_PLANET';\nexport const ADD_NEW_PLANET = 'ADD_NEW_PLANET';\nexport const DELETE_PLANET = 'DELETE_PLANET';\nexport const CHANGE_PLANET_STATUS = 'CHANGE_PLANET_STATUS';\n\nfunction setPlanetsAC(planets) {\n  return { type: SET_PLANETS, planets };\n}\n\nexport const setPlanets = (planets) => (dispatch) => {\n  dispatch(setPlanetsAC(planets));\n  dispatch(planetsInzDone());\n}\n\nexport const getPlanetsData = () => async (dispatch) => {\n  try {\n    dispatch(setPlanetsLoading(true));\n    const planets = await planetsAPI.getPlanets();\n    dispatch(setPlanetsAC(planets));\n    localStorage.setItem('swapi-planets', JSON.stringify(planets))\n    dispatch(peopleInzDone())\n  } catch (err) {\n    dispatch(setError(err.message))\n  } finally {\n    dispatch(setPlanetsLoading(false));\n  }\n}\n\nfunction addNewPlanetAC(planet) {\n  return { type: ADD_NEW_PLANET, planet }\n}\n\nexport const addNewPlanet = (planet) => (dispatch, getState) => {\n  dispatch(addNewPlanetAC(planet));\n  localStorage.setItem('swapi-planets', JSON.stringify(getState().planets))\n}\n\nfunction updatePlanetAC(planet) {\n  return { type: UPDATE_PLANET, planet }\n}\n\nexport const updatePlanet = (planet) => (dispatch, getState) => {\n  dispatch(updatePlanetAC(planet));\n  localStorage.setItem('swapi-planets', JSON.stringify(getState().planets));\n}\n\nfunction deletePlanetAC(id) {\n  return { type: DELETE_PLANET, id };\n}\n\nexport const deletePlanet = (id) => (dispatch, getState) => {\n  dispatch(deletePlanetAC(id));\n  localStorage.setItem('swapi-planets', JSON.stringify(getState().planets))\n}\n\nfunction changePlanetStatusAC(id) {\n  return { type: CHANGE_PLANET_STATUS, id };\n}\n\nexport const changePlanetStatus = (id) => (dispatch, getState) => {\n  dispatch(changePlanetStatusAC(id));\n  localStorage.setItem('swapi-planets', JSON.stringify(getState().planets))\n}","import { nanoid } from \"nanoid\";\r\nimport * as axios from 'axios';\r\n\r\nexport const starshipsColumns = [\r\n    'name',\r\n    'model',\r\n    'starship_class',\r\n    'manufacturer',\r\n    'passengers',\r\n]\r\n\r\n\r\nexport const starshipsAPI = {\r\n\r\n    async getStarships() {\r\n        const response = await axios.get('https://swapi.dev/api/starships');\r\n        return response.data.results.map(({ name, model, starship_class, manufacturer, passengers }) => ({\r\n            name,\r\n            model,\r\n            starship_class,\r\n            manufacturer,\r\n            passengers,\r\n            beloved: false,\r\n            id: nanoid()\r\n        }))\r\n    },\r\n}","import { starshipsAPI } from '../../services/starshipsService';\nimport { setStarshipsLoading, starshipsInzDone } from './loading';\nimport { setError } from './errors';\n\nexport const SET_STARSHIPS = 'SET_STARSHIPS';\nexport const UPDATE_STARSHIP = 'UPDATE_STARSHIP';\nexport const ADD_NEW_STARSHIP = 'ADD_NEW_STARSHIP';\nexport const DELETE_STARSHIP = 'DELETE_STARSHIP';\nexport const CHANGE_STARSHIP_STATUS = 'CHANGE_STARSHIP_STATUS';\n\nfunction setStarshipsAC(starships) {\n  return { type: SET_STARSHIPS, starships };\n}\n\nexport const setStarships = (starships) => (dispatch) => {\n  dispatch(setStarshipsAC(starships));\n  dispatch(starshipsInzDone());\n}\n\nexport const getStarshipsData = () => async (dispatch) => {\n  try {\n    dispatch(setStarshipsLoading(true));\n    const starships = await starshipsAPI.getStarships();\n    dispatch(setStarshipsAC(starships));\n    localStorage.setItem('swapi-starships', JSON.stringify(starships))\n  } catch (err) {\n    dispatch(setError(err.message))\n  } finally {\n    dispatch(setStarshipsLoading(false));\n  }\n}\n\nfunction addNewStarshipAC(starship) {\n  return { type: ADD_NEW_STARSHIP, starship }\n}\n\nexport const addNewStarship = (starship) => (dispatch, getState) => {\n  dispatch(addNewStarshipAC(starship));\n  localStorage.setItem('swapi-starships', JSON.stringify(getState().starships))\n}\n\nfunction updateStarshipAC(starship) {\n  return { type: UPDATE_STARSHIP, starship }\n}\n\nexport const updateStarship = (starship) => (dispatch, getState) => {\n  dispatch(updateStarshipAC(starship));\n  localStorage.setItem('swapi-starships', JSON.stringify(getState().starships))\n}\n\nfunction deleteStarshipAC(id) {\n  return { type: DELETE_STARSHIP, id };\n}\n\nexport const deleteStarship = (id) => (dispatch, getState) => {\n  dispatch(deleteStarshipAC(id));\n  localStorage.setItem('swapi-starships', JSON.stringify(getState().starships))\n}\n\nfunction changeStarshipStatusAC(id) {\n  return { type: CHANGE_STARSHIP_STATUS, id };\n}\n\nexport const changeStarshipStatus = (id) => (dispatch, getState) => {\n  dispatch(changeStarshipStatusAC(id));\n  localStorage.setItem('swapi-starships', JSON.stringify(getState().starships))\n}","export const getAllPeople = state => {\n  return state.people;\n}","export const getAllPlanets = state => {\n  return state.planets;\n}","export const getAllStarships = state => {\n  return state.starships;\n}","import React from 'react';\n\nconst Button = ({onClick, label, classes, disabled}) => {\n    return (\n        <button\n            disabled={disabled}\n            onClick={onClick}\n            className={classes}\n        >\n            {label}\n        </button>\n    );\n};\n\nexport default Button;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport Button from './Button';\nimport './Table.css';\n\nconst Table = ({ columns, data, onDelete, tableDescriptor, isLoading, isInitializing }) => {\n  const createKey = (value) => {\n    return value + nanoid();\n  };\n\n  const renderCell = (item, column) =>\n    column.content ? column?.content(item) : item[column.colName];\n\n  if (!data?.length && !isLoading && !isInitializing) {\n    return <h4>There is no data for {tableDescriptor}</h4>;\n  }\n\n  return (\n    <table className=\"table table-striped table-dark\">\n      <thead>\n        <tr>\n          <th scope=\"col\">{tableDescriptor}</th>\n          {columns.map((column) => (\n            <th key={createKey(column.colName)} scope=\"col\" className=\"cellHeader\">\n              {column.colName}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item, index) => (\n          <tr key={createKey(item.name)}>\n            <th scope=\"row\">{++index}</th>\n            {columns.map((column) => {\n              return (\n                <td key={createKey(item.name)} className=\"tableCell\">\n                  {renderCell(item, column)}\n                </td>\n              );\n            })}\n            <td>\n              <Button onClick={() => onDelete(item.id)} classes=\"btn btn-danger\" label=\"Delete\" />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\r\nimport preloader from \"./Preloader.svg\";\r\n\r\nconst Preloader = ({ className = null, width = \"40px\", ...styleArg }) => {\r\n  const style = { width, ...styleArg };\r\n  return (\r\n    <img src={preloader} alt=\"preloader\" style={style} className={className} />\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllPeople } from '../../store/selectors/people';\nimport { deletePerson, changePersonStatus } from '../../store/actions/people';\nimport Table from '../common/Table';\nimport Preloader from '../common/Preloader/Preloader';\n\nconst PeoplePage = () => {\n  const dispatch = useDispatch();\n  const people = useSelector((state) => getAllPeople(state));\n  const peopleLoading = useSelector((state) => state.loading.peopleLoading);\n  const peopleInitializing = useSelector((state) => state.loading.peopleInitializing);\n\n  const handlePersonStatus = (id) => {\n    dispatch(changePersonStatus(id));\n  };\n\n  const handleDelete = (id) => {\n    dispatch(deletePerson(id));\n  };\n\n  const getColumns = () => {\n    if (!people.length) return [];\n\n    return Object.keys(people[0]).map((colName) => {\n      if (colName === 'beloved') {\n        return {\n          colName,\n          content: ({ beloved, id }) => (\n            <input type=\"checkbox\" checked={beloved} onChange={() => handlePersonStatus(id)} />\n          ),\n        };\n      }\n      if (colName === 'name') {\n        return {\n          colName,\n          content: ({ name, id }) => (\n            <Link style={{ color: '#ffc107' }} to={`/people/${id}`}>\n              {name}\n            </Link>\n          ),\n        };\n      }\n      return { colName };\n    });\n  };\n\n  return (\n    <div>\n      <h3 className=\"text-light\">People from Star Wars Universe</h3>\n      <Link to={'/people/new'} className=\"btn btn-warning\" style={{ marginBottom: 25 }}>\n        New Person\n      </Link>\n      <Table\n        columns={getColumns()}\n        data={Object.values(people)}\n        tableDescriptor=\"People\"\n        onDelete={handleDelete}\n        isLoading={peopleLoading}\n        isInitializing={peopleInitializing}\n      />\n      {peopleLoading && <Preloader marginTop=\"20px\" />}\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllPlanets } from '../../store/selectors/planets';\nimport { deletePlanet, changePlanetStatus } from '../../store/actions/planets';\nimport Table from '../common/Table';\nimport Preloader from '../common/Preloader/Preloader';\n\nconst PlanetsPage = () => {\n  const dispatch = useDispatch();\n  const planets = useSelector((state) => getAllPlanets(state));\n  const planetsLoading = useSelector((state) => state.loading.planetsLoading);\n  const planetsInitializing = useSelector((state) => state.loading.planetsInitializing);\n\n  const handlePlanetStatus = (id) => {\n    dispatch(changePlanetStatus(id));\n  };\n\n  const handleDelete = (id) => {\n    dispatch(deletePlanet(id));\n  };\n\n  const getColumns = () => {\n    if (!planets.length) return [];\n\n    return Object.keys(planets[0]).map((colName) => {\n      if (colName === 'beloved') {\n        return {\n          colName,\n          content: ({ beloved, id }) => (\n            <input type=\"checkbox\" checked={beloved} onChange={() => handlePlanetStatus(id)} />\n          ),\n        };\n      }\n      if (colName === 'name') {\n        return {\n          colName,\n          content: ({ name, id }) => (\n            <Link style={{ color: '#ffc107' }} to={`/planets/${id}`}>\n              {name}\n            </Link>\n          ),\n        };\n      }\n      return { colName };\n    });\n  };\n\n  return (\n    <div>\n      <h3 className=\"text-light\">Planets from Star Wars Universe</h3>\n      <Link to={'/planets/new'} className=\"btn btn-warning\" style={{ marginBottom: 25 }}>\n        New Planet\n      </Link>\n      <Table\n        columns={getColumns()}\n        data={Object.values(planets)}\n        tableDescriptor=\"Planets\"\n        onDelete={handleDelete}\n        isLoading={planetsLoading}\n        isInitializing={planetsInitializing}\n      />\n      {planetsLoading && <Preloader marginTop=\"20px\" />}\n    </div>\n  );\n};\n\nexport default PlanetsPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllStarships } from '../../store/selectors/starships';\nimport { deleteStarship, changeStarshipStatus } from '../../store/actions/starships';\nimport Table from '../common/Table';\nimport Preloader from '../common/Preloader/Preloader';\n\nconst StarshipsPage = () => {\n  const dispatch = useDispatch();\n  const starships = useSelector((state) => getAllStarships(state));\n  const starshipsLoading = useSelector((state) => state.loading.starshipsLoading);\n  const starshipsInitializing = useSelector((state) => state.loading.starshipsInitializing);\n\n  const handleBelovedStatus = (id) => {\n    dispatch(changeStarshipStatus(id));\n  };\n\n  const handleDelete = (id) => {\n    dispatch(deleteStarship(id));\n  };\n\n  const getColumns = () => {\n    if (!starships.length) return [];\n\n    return Object.keys(starships[0]).map((colName) => {\n      if (colName === 'beloved') {\n        return {\n          colName,\n          content: ({ beloved, id }) => (\n            <input type=\"checkbox\" checked={beloved} onChange={() => handleBelovedStatus(id)} />\n          ),\n        };\n      }\n      if (colName === 'name') {\n        return {\n          colName,\n          content: ({ name, id }) => (\n            <Link style={{ color: '#ffc107' }} to={`/starships/${id}`}>\n              {name}\n            </Link>\n          ),\n        };\n      }\n      return { colName };\n    });\n  };\n\n  return (\n    <div>\n      <h3 className=\"text-light\">Starships from Star Wars Universe</h3>\n      <Link to={'/starships/new'} className=\"btn btn-warning\" style={{ marginBottom: 25 }}>\n        New Starship\n      </Link>\n      <Table\n        columns={getColumns()}\n        data={Object.values(starships)}\n        tableDescriptor=\"Starships\"\n        onDelete={handleDelete}\n        isLoading={starshipsLoading}\n        isInitializing={starshipsInitializing}\n      />\n      {starshipsLoading && <Preloader marginTop=\"20px\" />}\n    </div>\n  );\n};\n\nexport default StarshipsPage;\n","import Joi from '@hapi/joi';\r\n\r\nexport default {\r\n    default: (value) => {\r\n        const { error: { message } = {} } = Joi.string()\r\n            .required()\r\n            .validate(value);\r\n        return message ? message : '';\r\n    },\r\n    name: (value) => {\r\n        const { error: { message } = {} } = Joi.string()\r\n            .min(3)\r\n            .max(30)\r\n            .required()\r\n            .validate(value);\r\n        return message ? message : '';\r\n    },\r\n    height: (value) => {\r\n        if (value === '') return '\"value\" is not allowed to be empty'\r\n        const { error: { message } = {} } = Joi.number()\r\n            .integer()\r\n            .positive()\r\n            .less(250)\r\n            .validate(value);\r\n        return message ? message : '';\r\n    },\r\n    mass: (value) => {\r\n        if (value === '') return '\"value\" is not allowed to be empty'\r\n        const { error: { message } = {} } = Joi.number()\r\n            .integer()\r\n            .positive()\r\n            .less(250)\r\n            .validate(value);\r\n        return message ? message : '';\r\n    },\r\n    gender: (value) => {\r\n        const { error: { message } = {} } = Joi.string().valid('male', 'female', '').validate(value)\r\n        return message ? message : '';\r\n    },\r\n    birth_year: (value) => {\r\n        if (value === '') return '';\r\n        const { error: { message } = {} } = Joi.number().positive().validate(value)\r\n        return message ? message : '';\r\n    }\r\n};","import React from 'react';\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name} className=\"text-warning\">\n        {' '}\n        {label}{' '}\n      </label>\n      <input id={name} name={name} {...rest} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch, useLocation, Redirect } from 'react-router-dom';\nimport { peopleColumns } from '../../services/peopleService';\nimport { getAllPeople } from '../../store/selectors/people';\nimport { addNewPerson, updatePerson } from '../../store/actions/people';\nimport { set404error } from '../../store/actions/errors';\nimport validateArr from '../../utils/validation/peopleForm';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\n\nconst PeopleForm = () => {\n  const dispatch = useDispatch();\n  const people = useSelector((state) => getAllPeople(state));\n  const { pathname } = useLocation();\n\n  const history = useHistory();\n  const match = useRouteMatch();\n\n  const [formErrors, setFormErrors] = useState({});\n  const [personData, setPersonData] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [personIdError, setPersonIdError] = useState(false);\n\n  // convert data for rendering\n  const forRender = (person) => {\n    const renderPerson = { ...person };\n    const { birth_year, gender } = renderPerson;\n    if (birth_year === 'unknown') {\n      renderPerson.birth_year = '';\n    } else renderPerson.birth_year = birth_year.replace('BBY', '');\n    if (gender === 'n/a') renderPerson.gender = '';\n    return renderPerson;\n  };\n  // set person data on componentDidMount\n  useEffect(() => {\n    const pathId = match.params.id;\n    if (pathId === 'new') {\n      const initialPersonData = peopleColumns.reduce((columns, columnName) => {\n        columns[columnName] = '';\n        return columns;\n      }, {});\n      setPersonData(initialPersonData);\n    }\n\n    const person = people?.find((person) => person.id === pathId);\n    if (person) {\n      setPersonData(forRender(person));\n      setEditMode(true);\n    }\n    if (!person && pathId !== 'new') {\n      setPersonIdError(true);\n      dispatch(set404error(pathname));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getValidateFunc = (key) => {\n    return validateArr[key] ? validateArr[key] : validateArr['default'];\n  };\n\n  // convert data for storing\n  const forStore = (person, newItem = false) => {\n    const storePerson = { ...person };\n    const { birth_year, gender } = storePerson;\n    if (gender === '') storePerson.gender = 'n/a';\n    if (birth_year === '' || birth_year === 'unknown') {\n      storePerson.birth_year = 'unknown';\n    } else storePerson.birth_year = birth_year + 'BBY';\n    if (newItem) {\n      storePerson.beloved = false;\n      storePerson.id = nanoid();\n    }\n    return storePerson;\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const errors = { ...formErrors };\n\n    if (editMode) {\n      dispatch(updatePerson(forStore(personData)));\n      history.push('/people');\n    } else if (Object.keys(formErrors).length === 0) {\n      for (let key in personData) {\n        const validateFunc = getValidateFunc(key);\n        if (validateFunc(personData[key]) !== '') {\n          errors[key] = validateFunc(personData[key]);\n        }\n      }\n\n      if (!Object.keys(errors).length) {\n        dispatch(addNewPerson(forStore(personData, true)));\n        history.push('/people');\n      } else setFormErrors(errors);\n    }\n  };\n\n  const handleChange = ({ currentTarget: { value, name } }) => {\n    const data = { ...personData };\n    const validateFunc = getValidateFunc(name);\n\n    const currentError = validateFunc(value);\n\n    if (currentError) {\n      const errors = { ...formErrors, [name]: currentError };\n      setFormErrors(errors);\n    }\n\n    if (formErrors[name] && !currentError) {\n      const errors = { ...formErrors };\n      delete errors[name];\n      setFormErrors(errors);\n    }\n\n    data[name] = value;\n    setPersonData(data);\n  };\n\n  if (personIdError) return <Redirect to=\"/path_not_found\" />;\n  return (\n    <form>\n      {peopleColumns.map((columnName) => (\n        <Input\n          key={columnName}\n          name={columnName}\n          label={columnName[0].toUpperCase() + columnName.slice(1)}\n          value={personData[columnName] ? personData[columnName] : ''}\n          type={columnName === 'beloved' ? 'checkbox' : 'input'}\n          error={formErrors[columnName]}\n          onChange={(event) => handleChange(event)}\n        />\n      ))}\n      <Button\n        onClick={onSubmit}\n        label=\"Save\"\n        disabled={Object.keys(formErrors).length}\n        classes=\"btn btn-warning\"\n      />\n    </form>\n  );\n};\n\nexport default PeopleForm;\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <NavLink className=\"navbar-brand\" to=\"/\">\r\n      SWDB\r\n    </NavLink>\r\n    <button\r\n      className=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-toggle=\"collapse\"\r\n      data-target=\"#navbarNav\"\r\n      aria-controls=\"navbarNav\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span className=\"navbar-toggler-icon\" />\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" to=\"/people\">\r\n            People <span className=\"sr-only\">(current)</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" to=\"/planets\">\r\n            Planets\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" to=\"/starships\">\r\n            Starships\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { set404error, reset404error } from '../../../store/actions/errors'\r\nimport styles from './Error404.module.css'\r\n\r\n\r\nconst Error404 = ({ location, history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const invalidPath = useSelector(state => state.errors.error404)\r\n\r\n    useEffect(() => {\r\n        if (invalidPath === null) {\r\n            dispatch(set404error(location.pathname));\r\n        }\r\n        history.push('/path_not_found')\r\n        return () => dispatch(reset404error())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.Error404}>\r\n            <h3>No match for path: <code>\"{invalidPath}\"</code>. Please, check whether the URL is correct.</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Error404);","import React, { useEffect } from 'react';\r\nimport styles from './CommonError.module.css';\r\n\r\n\r\nconst CommonError = ({ message, id, resetError }) => {\r\n\r\n    useEffect(() => {\r\n        const timerId = setTimeout(() => resetError(id), 3000)\r\n        return () => clearTimeout(timerId)\r\n    }, [resetError, id])\r\n\r\n    const closeOnClick = () => resetError(id)\r\n\r\n    return (\r\n        <div className={styles.error} onClick={closeOnClick}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommonError;","import Joi from '@hapi/joi';\r\n\r\nexport default {\r\n    default: (value) => {\r\n        const { error: { message } = {} } = Joi.string()\r\n            .min(3)\r\n            .max(30)\r\n            .required()\r\n            .validate(value);\r\n        return message ? message : '';\r\n    },\r\n    diameter: (value) => {\r\n        if (value === '') return '\"value\" is not allowed to be empty'\r\n        const { error: { message } = {} } = Joi.number()\r\n            .integer()\r\n            .positive()\r\n            .less(1e15)\r\n            .validate(value);\r\n        return message ? message : '';\r\n    },\r\n    population: (value) => {\r\n        if (value === '') return '';\r\n        const { error: { message } = {} } = Joi.number()\r\n            .integer()\r\n            .min(0)\r\n            .validate(value);\r\n        return message ? message : '';\r\n    },\r\n    rotation_period: (value) => {\r\n        if (value === '') return '\"value\" is not allowed to be empty'\r\n        const { error: { message } = {} } = Joi.number()\r\n            .positive()\r\n            .integer()\r\n            .less(100)\r\n            .required()\r\n            .validate(value)\r\n        return message ? message : '';\r\n    }\r\n};","import React, { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useHistory, useRouteMatch, useLocation, Redirect } from 'react-router-dom';\nimport { planetsColumns } from '../../services/planetsService';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllPlanets } from '../../store/selectors/planets';\nimport { addNewPlanet, updatePlanet } from '../../store/actions/planets';\nimport { set404error } from '../../store/actions/errors';\nimport validateArr from '../../utils/validation/planetsForm';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\n\nconst PlanetsForm = () => {\n  const dispatch = useDispatch();\n  const planets = useSelector((state) => getAllPlanets(state));\n\n  const history = useHistory();\n  const match = useRouteMatch();\n  const { pathname } = useLocation();\n\n  const [formErrors, setFormErrors] = useState({});\n  const [planetData, setPlanetData] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [planetIdError, setPlanetIdError] = useState(false);\n\n  // convert data for rendering\n  const forRender = (planet) => {\n    const renderPlanet = { ...planet };\n    const { population } = renderPlanet;\n    if (population === 'unknown') renderPlanet.population = '';\n    return renderPlanet;\n  };\n\n  // set planet data on componentDidMount\n  useEffect(() => {\n    const pathId = match.params.id;\n    if (pathId === 'new') {\n      const initialPlanetData = planetsColumns.reduce((columns, columnName) => {\n        columns[columnName] = '';\n        return columns;\n      }, {});\n      setPlanetData(initialPlanetData);\n    }\n\n    const planet = planets && planets.find((planet) => planet.id === pathId);\n    if (planet) {\n      setPlanetData(forRender(planet));\n      setEditMode(true);\n    }\n    if (!planet && pathId !== 'new') {\n      setPlanetIdError(true);\n      dispatch(set404error(pathname));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getValidateFunc = (key) => {\n    return validateArr[key] ? validateArr[key] : validateArr['default'];\n  };\n\n  // convert data for storing\n  const forStore = (planet, newItem = false) => {\n    const storePlanet = { ...planet };\n    const { population } = storePlanet;\n    if (population === '') storePlanet.population = 'unknown';\n    if (newItem) {\n      storePlanet.beloved = false;\n      storePlanet.id = nanoid();\n    }\n    return storePlanet;\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const errors = { ...formErrors };\n\n    if (editMode) {\n      dispatch(updatePlanet(forStore(planetData)));\n      history.push('/planets');\n    } else {\n      if (Object.keys(formErrors).length === 0) {\n        for (let key in planetData) {\n          const validateFunc = getValidateFunc(key);\n          if (validateFunc(planetData[key]) !== '') {\n            errors[key] = validateFunc(planetData[key]);\n          }\n        }\n      }\n\n      if (!Object.keys(errors).length) {\n        dispatch(addNewPlanet(forStore(planetData, true)));\n        history.push('/planets');\n      } else setFormErrors(errors);\n    }\n  };\n\n  const handleChange = ({ currentTarget: { value, name } }) => {\n    const data = { ...planetData };\n    const validateFunc = getValidateFunc(name);\n\n    const currentError = validateFunc(value);\n\n    if (currentError) {\n      const errors = { ...formErrors, [name]: currentError };\n      setFormErrors(errors);\n    }\n\n    if (formErrors[name] && !currentError) {\n      const errors = { ...formErrors };\n      delete errors[name];\n      setFormErrors(errors);\n    }\n\n    data[name] = value;\n    setPlanetData(data);\n  };\n\n  if (planetIdError) return <Redirect to=\"/path_not_found\" />;\n  return (\n    <form>\n      {planetsColumns.map((columnName) => (\n        <Input\n          key={columnName}\n          name={columnName}\n          label={columnName[0].toUpperCase() + columnName.slice(1)}\n          value={planetData[columnName] ? planetData[columnName] : ''}\n          type={columnName === 'beloved' ? 'checkbox' : 'input'}\n          error={formErrors[columnName]}\n          onChange={(event) => handleChange(event)}\n        />\n      ))}\n      <Button\n        onClick={onSubmit}\n        label=\"Save\"\n        disabled={Object.keys(formErrors).length}\n        classes=\"btn btn-warning\"\n      />\n    </form>\n  );\n};\n\nexport default PlanetsForm;\n","import Joi from '@hapi/joi';\r\n\r\nexport default {\r\n    default: (value) => {\r\n        const { error: { message } = {} } = Joi.string()\r\n            .min(3)\r\n            .max(30)\r\n            .required()\r\n            .validate(value);\r\n        return message ? message : '';\r\n    },\r\n    passengers: (value) => {\r\n        if (value === '') return ''\r\n        const { error: { message } = {} } = Joi.number()\r\n            .min(0)\r\n            .integer()\r\n            .required()\r\n            .validate(value)\r\n        return message ? message : '';\r\n    }\r\n};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch, useLocation, Redirect } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { starshipsColumns } from '../../services/starshipsService';\nimport { getAllStarships } from '../../store/selectors/starships';\nimport { addNewStarship, updateStarship } from '../../store/actions/starships';\nimport { set404error } from '../../store/actions/errors';\nimport validateArr from '../../utils/validation/starshipsForm';\nimport Input from '../common/Input';\nimport Button from '../common/Button';\n\nconst StarshipsForm = () => {\n  const dispatch = useDispatch();\n  const starships = useSelector((state) => getAllStarships(state));\n\n  const history = useHistory();\n  const match = useRouteMatch();\n  const { pathname } = useLocation();\n\n  const [formErrors, setFormErrors] = useState({});\n  const [starshipData, setStarshipData] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [starshipIdError, setStarshipIdError] = useState(false);\n\n  // convert data for rendering\n  const forRender = (starship) => {\n    const renderStarship = { ...starship };\n    const { passengers } = renderStarship;\n    if (passengers === 'n/a') renderStarship.passengers = '';\n    if (passengers.includes(',')) renderStarship.passengers = passengers.replace(',', '');\n    return renderStarship;\n  };\n\n  // set starship data on componentDidMount\n  useEffect(() => {\n    const pathId = match.params.id;\n    if (pathId === 'new') {\n      const initialStarshipData = starshipsColumns.reduce((columns, columnName) => {\n        columns[columnName] = '';\n        return columns;\n      }, {});\n      setStarshipData(initialStarshipData);\n    }\n\n    const starship = starships && starships.find((starship) => starship.id === pathId);\n    if (starship) {\n      setStarshipData(forRender(starship));\n    }\n    if (!starship && pathId !== 'new') {\n      setStarshipIdError(true);\n      dispatch(set404error(pathname));\n    }\n    if (starship) setEditMode(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getValidateFunc = (key) => {\n    return validateArr[key] ? validateArr[key] : validateArr['default'];\n  };\n\n  // convert data for storing\n  const forStore = (starship, newItem = false) => {\n    const renderStarship = { ...starship };\n    const { passengers } = renderStarship;\n    if (passengers === '') renderStarship.passengers = 'n/a';\n    if (newItem) {\n      renderStarship.beloved = false;\n      renderStarship.id = nanoid();\n    }\n    return renderStarship;\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const errors = { ...formErrors };\n\n    if (editMode) {\n      dispatch(updateStarship(forStore(starshipData)));\n      history.push('/starships');\n    } else {\n      if (Object.keys(formErrors).length === 0) {\n        for (let key in starshipData) {\n          const validateFunc = getValidateFunc(key);\n          if (validateFunc(starshipData[key]) !== '') {\n            errors[key] = validateFunc(starshipData[key]);\n          }\n        }\n      }\n\n      if (!Object.keys(errors).length) {\n        dispatch(addNewStarship(forStore(starshipData, true)));\n        history.push('/starships');\n      } else setFormErrors(errors);\n    }\n  };\n\n  const handleChange = ({ currentTarget: { value, name } }) => {\n    const data = { ...starshipData };\n    const validateFunc = getValidateFunc(name);\n\n    const currentError = validateFunc(value);\n\n    if (currentError) {\n      const errors = { ...formErrors, [name]: currentError };\n      setFormErrors(errors);\n    }\n\n    if (formErrors[name] && !currentError) {\n      const errors = { ...formErrors };\n      delete errors[name];\n      setFormErrors(errors);\n    }\n\n    data[name] = value;\n    setStarshipData(data);\n  };\n\n  if (starshipIdError) return <Redirect to=\"/path_not_found\" />;\n  return (\n    <form>\n      {starshipsColumns.map((columnName) => (\n        <Input\n          key={columnName}\n          name={columnName}\n          label={columnName[0].toUpperCase() + columnName.slice(1)}\n          value={starshipData[columnName] ? starshipData[columnName] : ''}\n          type={columnName === 'beloved' ? 'checkbox' : 'input'}\n          error={formErrors[columnName]}\n          onChange={(event) => handleChange(event)}\n        />\n      ))}\n      <Button\n        onClick={onSubmit}\n        label=\"Save\"\n        disabled={Object.keys(formErrors).length}\n        classes=\"btn btn-warning\"\n      />\n    </form>\n  );\n};\n\nexport default StarshipsForm;\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPeopleData, setPeople } from \"./store/actions/people\";\r\nimport { getPlanetsData, setPlanets } from \"./store/actions/planets\";\r\nimport { getStarshipsData, setStarships } from \"./store/actions/starships\";\r\nimport { getAllPeople } from './store/selectors/people';\r\nimport { getAllPlanets } from './store/selectors/planets';\r\nimport { getAllStarships } from './store/selectors/starships';\r\nimport { resetError } from './store/actions/errors';\r\nimport PeoplePage from \"./components/pages/PeoplePage\";\r\nimport PlanetsPage from \"./components/pages/PlanetsPage\";\r\nimport StarshipsPage from \"./components/pages/StarshipsPage\";\r\nimport PeopleForm from \"./components/forms/PeopleForm\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Error404 from \"./components/common/Error404/Error404\";\r\nimport CommonError from './components/common/CommonError/CommonError';\r\nimport PlanetsForm from './components/forms/PlanetsForm';\r\nimport StarshipsForm from './components/forms/StarshipsForm';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n\r\n    const pathname = useLocation().pathname;\r\n\r\n    const dispatch = useDispatch();\r\n    const people = useSelector(state => getAllPeople(state));\r\n    const planets = useSelector(state => getAllPlanets(state));\r\n    const starships = useSelector(state => getAllStarships(state));\r\n    const errors = useSelector(state => state.errors.errors)\r\n\r\n\r\n    useEffect(() => {\r\n        if (pathname === '/people' && !people.length) {\r\n            const peopleLS = localStorage.getItem('swapi-people');\r\n            if (peopleLS !== null) {\r\n                dispatch(setPeople(JSON.parse(peopleLS)))\r\n            } else dispatch(getPeopleData())\r\n        };\r\n        if (pathname === '/planets' && !planets.length) {\r\n            const planetsLS = localStorage.getItem('swapi-planets');\r\n            if (planetsLS !== null) {\r\n                dispatch(setPlanets(JSON.parse(planetsLS)));\r\n            } else dispatch(getPlanetsData());\r\n        };\r\n        if (pathname === '/starships' && !starships.length) {\r\n            const starshipsLS = localStorage.getItem('swapi-starships');\r\n            if (starshipsLS !== null) {\r\n                dispatch(setStarships(JSON.parse(starshipsLS)))\r\n            } else dispatch(getStarshipsData());\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pathname]);\r\n\r\n    const dispatchResetError = (id) => dispatch(resetError(id))\r\n\r\n    const errorsArr = errors.length\r\n        ? errors.map((err) =>\r\n            <CommonError message={err.message} id={err.id} resetError={dispatchResetError} key={err.id} />)\r\n        : null\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <main className=\"container\">\r\n                {errors.length > 0 && <div className='errorsBox'>{errorsArr}</div>}\r\n                <Switch>\r\n                    <Redirect exact from=\"/\" to=\"/people\" />\r\n                    <Route path=\"/people/:id\" render={props => <PeopleForm {...props} />} />\r\n                    <Route path=\"/people\" render={props => <PeoplePage {...props} />} />\r\n                    <Route path=\"/planets/:id\" render={props => <PlanetsForm {...props} />} />\r\n                    <Route path=\"/planets\" component={PlanetsPage} />\r\n                    <Route path=\"/starships/:id\" render={props => <StarshipsForm {...props} />} />\r\n                    <Route path=\"/starships\" component={StarshipsPage} />\r\n                    <Route component={Error404} />\r\n                </Switch>\r\n            </main>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { SET_PEOPLE, ADD_NEW_PERSON, UPDATE_PERSON, DELETE_PERSON, CHANGE_PERSON_STATUS } from '../actions/people'\n\nconst initialState = [];\n\nfunction peopleReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_PEOPLE:\n      return [\n        ...state,\n        ...action.people\n      ];\n\n    case ADD_NEW_PERSON:\n      return [\n        action.person,\n        ...state\n      ];\n\n    case UPDATE_PERSON:\n      return state.map((person) =>\n        person.id === action.person.id ? { ...action.person } : person\n      )\n\n    case DELETE_PERSON:\n      return [...state.filter(person => person.id !== action.id)];\n\n    case CHANGE_PERSON_STATUS:\n      return [\n        ...state.map((person) => {\n          return person.id === action.id ? { ...person, beloved: !person.beloved } : person\n        })\n      ];\n\n    default:\n      return state;\n  }\n}\n\nexport default peopleReducer;","import { SET_PLANETS, ADD_NEW_PLANET, UPDATE_PLANET, DELETE_PLANET, CHANGE_PLANET_STATUS } from '../actions/planets'\n\nconst initialState = [];\n\nfunction planetReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_PLANETS:\n      return [\n        ...state,\n        ...action.planets\n      ];\n\n    case ADD_NEW_PLANET:\n      return [\n        action.planet,\n        ...state\n      ];\n\n    case UPDATE_PLANET:\n      return state.map((planet) =>\n        planet.id === action.planet.id ? { ...action.planet } : planet\n      )\n\n    case DELETE_PLANET:\n      return [...state.filter(planet => planet.id !== action.id)];\n\n    case CHANGE_PLANET_STATUS:\n      return [\n        ...state.map((planet) => {\n          return planet.id === action.id ? { ...planet, beloved: !planet.beloved } : planet\n        })\n      ];\n\n    default:\n      return state;\n  }\n}\n\nexport default planetReducer;","import { SET_STARSHIPS, ADD_NEW_STARSHIP, UPDATE_STARSHIP, DELETE_STARSHIP, CHANGE_STARSHIP_STATUS } from '../actions/starships';\n\nconst initialState = [];\n\nfunction starshipsReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_STARSHIPS:\n      return [\n        ...state,\n        ...action.starships\n      ];\n\n    case ADD_NEW_STARSHIP:\n      return [\n        action.starship,\n        ...state\n      ];\n\n    case UPDATE_STARSHIP:\n      return state.map((starship) =>\n        starship.id === action.starship.id ? { ...action.starship } : starship\n      )\n\n    case DELETE_STARSHIP:\n      return [...state.filter(starship => starship.id !== action.id)];\n\n    case CHANGE_STARSHIP_STATUS:\n      return [\n        ...state.map((starship) => {\n          return starship.id === action.id ? { ...starship, beloved: !starship.beloved } : starship\n        })\n      ];\n\n    default:\n      return state;\n  }\n}\n\nexport default starshipsReducer;","import { SET_PEOPLE_LOADING } from '../actions/loading';\r\nimport { SET_PLANETS_LOADING } from '../actions/loading';\r\nimport { SET_STARSHIPS_LOADING } from '../actions/loading';\r\nimport { PEOPLE_INITIALIZING_DONE } from '../actions/loading';\r\nimport { PLANETS_INITIALIZING_DONE } from '../actions/loading';\r\nimport { STARSHIPS_INITIALIZING_DONE } from '../actions/loading';\r\n\r\n\r\n\r\nconst initialState = {\r\n    peopleInitializing: true,\r\n    planetsInitializing: true,\r\n    starshipsInitializing: true,\r\n    peopleLoading: false,\r\n    planetsLoading: false,\r\n    starshipsLoading: false\r\n}\r\n\r\nexport default function loadingReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        case PEOPLE_INITIALIZING_DONE:\r\n            return {\r\n                ...state,\r\n                peopleInitializing: false\r\n            }\r\n\r\n        case PLANETS_INITIALIZING_DONE:\r\n            return {\r\n                ...state,\r\n                planetsInitializing: false\r\n            }\r\n\r\n        case STARSHIPS_INITIALIZING_DONE:\r\n            return {\r\n                ...state,\r\n                starshipsInitializing: false\r\n            }\r\n\r\n        case SET_PEOPLE_LOADING:\r\n            return {\r\n                ...state,\r\n                peopleLoading: action.value\r\n            }\r\n        case SET_PLANETS_LOADING:\r\n            return {\r\n                ...state,\r\n                planetsLoading: action.value\r\n            }\r\n        case SET_STARSHIPS_LOADING:\r\n            return {\r\n                ...state,\r\n                starshipsLoading: action.value\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}","import { SET_404_ERROR, RESET_404_ERROR, SET_ERROR, RESET_ERROR } from '../actions/errors'\r\n\r\nconst initialState = {\r\n    error404: null,\r\n    errors: []\r\n}\r\n\r\nexport default function errrorsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_404_ERROR:\r\n            return {\r\n                ...state,\r\n                error404: action.path\r\n            }\r\n\r\n        case RESET_404_ERROR:\r\n            return {\r\n                ...state,\r\n                error404: null\r\n            }\r\n\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: [...state.errors, action.error]\r\n            }\r\n\r\n        case RESET_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: state.errors.filter(err => err.id !== action.id)\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\nimport people from './people';\nimport planets from './planets';\nimport starships from './starships';\nimport loading from './loading';\nimport errors from './errors';\n\nexport default combineReducers({\n  people,\n  planets,\n  starships,\n  loading,\n  errors\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\n\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n))\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <HashRouter>\n                <App />\n            </HashRouter>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/Preloader.e749583c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error404\":\"Error404_Error404__2mfXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"CommonError_error__28Q2P\"};"],"sourceRoot":""}